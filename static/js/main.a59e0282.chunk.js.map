{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","state","xIsNext","stepNumber","history","Array","fill","step","this","setState","slice","length","calculateWinner","concat","current","winner","moves","map","move","desc","jumpTo","status","handleClick","react","Component","winnerLines","a","b","c","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a59e0282.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Square(props){\r\n    return (<button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>\r\n    );\r\n}","import React from 'react';\r\nimport Square from './Square';\r\n\r\nexport default function Board(props){\r\n    const renderSquare = (i) => {\r\n    return (\r\n        <Square \r\n            value = {props.squares[i]} \r\n            onClick={()=>props.onClick(i)}\r\n        ></Square>\r\n         );\r\n    };\r\n     return (\r\n        <div>\r\n            <div className = \"row\">\r\n            {renderSquare(0)}\r\n            {renderSquare(1)}\r\n            {renderSquare(2)}\r\n            </div>\r\n            <div className = \"row\">\r\n            {renderSquare(3)}\r\n            {renderSquare(4)}\r\n            {renderSquare(5)}\r\n            </div>\r\n            <div className = \"row\">\r\n            {renderSquare(6)}\r\n            {renderSquare(7)}\r\n            {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n","import react from 'react';\r\nimport Board from './Board';\r\nexport default class Game extends react.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            xIsNext : true,\r\n            stepNumber:0,\r\n            history:[{squares: Array(9).fill(null)}],\r\n        };\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: step % 2 === 0,\r\n            history: this.state.history.slice(0, step+1),\r\n        });\r\n    }\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber+1);\r\n        const current = history[history.length-1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext? 'X': 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares,\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length,\r\n        });\r\n    \r\n    }\r\n    render(){\r\n        const history = this.state.history;\r\n        const current = history[history.length-1];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step,move) => {\r\n            const desc = move ? 'Go to #' + move : 'Lets Start the Game';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => {this.jumpTo(move);\r\n                    }}\r\n                    >\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n        let status = winner? `Winner is ${winner}`: 'Next player is ' + (this.state.xIsNext?'X':'O');\r\n\r\n        return ( \r\n        <div className = \"game\">\r\n            <div className = \"game-board\">\r\n                <Board \r\n                    onClick={(i) => this.handleClick(i)} \r\n                    squares={current.squares}\r\n                ></Board>\r\n            </div>\r\n        \r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ul>{moves}</ul>\r\n\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n}\r\n\r\nfunction calculateWinner(squares){\r\n    const winnerLines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n        \r\n    ];\r\n    for (let i = 0; i < winnerLines.length; i++){\r\n        const [a,b,c] = winnerLines[i];\r\n        console.log(a, b, c);\r\n        if (squares[a] && squares[a]===squares[b] && squares[b] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import './App.css';\n\nimport Game from './components/Game';\n\n\nfunction App() {\n  return (\n   \n     <Game></Game>\n     \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}